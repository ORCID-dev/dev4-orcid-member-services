name: bld_docker
run-name: ${{ inputs.docker_name }}

permissions:
  checks: write
  contents: read
  issues: read
  pull-requests: write

on:
  workflow_call:
    inputs:
      docker_name:
        description: 'Name of the docker image to build'
        required: false
        default: "orcid/version-bumping-test"
        type: string
      context:
        description: 'Name of the context in the repo'
        required: false
        default: "."
        type: string
      version_tag:
        description: 'Name of the tag to build'
        required: false
        default: 'latest'
        type: string
      bump:
        description: 'whether to bump the version number by a major minor patch amount or none'
        required: false
        default: 'patch'
        type: string
      ref:
        description: 'git reference to use with the checkout use default_branch to have that calculated'
        required: false
        default: "default"
        type: string
      seed_maven_cache:
        description: Whether to seed cache
        type: boolean
        required: false
        default: true
      install_maven_dependencies:
        description: Whether to install dependencies or use a previous cache
        type: boolean
        required: false
        default: true



  workflow_dispatch:
    inputs:
      docker_name:
        description: 'Name of the docker image to build'
        required: false
        default: "orcid/version-bumping-test"
        type: string
      context:
        description: 'Name of the context in the repo'
        required: false
        default: "."
        type: string
      version_tag:
        description: 'Name of the tag to build'
        required: false
        default: 'latest'
        type: string
      bump:
        description: |
          How to optionally bump the semver version ( Major.Minor.Patch ) : git log will be searched for
          '#major #minor #patch' or feat/ or fix/ branch names to optionally override the bump. Set to none to keep a specific version
        required: false
        options:
          - patch
          - minor
          - major
          - none
        type: choice
      ref:
        description: 'git reference to use with the checkout use default_branch to have that calculated'
        required: false
        default: "default"
        type: string

jobs:
  bld_docker:
    runs-on: ubuntu-latest
    steps:
      - name: git-checkout-ref-action
        id: ref
        uses: ORCID/git-checkout-ref-action@main
        with:
          default_branch: ${{ github.event.repository.default_branch }}
          ref: ${{ inputs.ref }}

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.ref.outputs.ref }}
          # checkout some history so we can scan commits for bump messages
          # NOTE: history does not include tags!
          fetch-depth: 100

#       - name: find next version
#         id: version
#         uses: ORCID/version-bump-action@main
#         with:
#           version_tag: ${{ inputs.version_tag }}
#           bump: ${{ inputs.bump }}

      # with jib we are building outside the container and using mvn??
      - name: Set up Open JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: build our project
        working-directory: ${{ inputs.context }}
        run: |
          #mvn -T 1C --batch-mode -am package -DskipTests \
          #-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
          mvn -T 1C --batch-mode -am verify \
              jib:dockerBuild -Drelease.tag=$tag -DDOCKER_REG=$DOCKER_REG_PRIVATE
          echo "------------------------------------------------------"

          find . -name '*.war'
          find . -name '*.jar'
          docker image ls | head -10
        shell: bash
        env:
          DOCKER_REG_PRIVATE: "${{ secrets.DOCKER_REG_PRIVATE }}"
          #version_tag: "${{ steps.version.outputs.version_tag }}"
          tag: "0.0.1"

# echo "pushing memberservice image to nexus"
#docker push ${DOCKER_REG_PRIVATE}/memberservice:$tag

